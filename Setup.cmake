# Defines the following macros to manage OCaml compilation
# OCAML_ADD_LIBRARY
# OCAML_ADD_EXECUTABLE
# OCAML_LINK_LIBRARIES

# Add the cmake dir to the modules path so the OCaml compiler definitions can be found.
SET(CMAKE_OCaml_COMPILER_INIT "${OE_CURRENT_EXTENSION_DIR}/bin/ocaml.py")
SET(CMAKE_MODULE_PATH "${OE_CURRENT_EXTENSION_DIR}/cmake" ${CMAKE_MODULE_PATH})
ENABLE_LANGUAGE(OCaml)

# Macro wrappers
MACRO(FILE_NAME var file)
  SET(${var} "")
  STRING(REGEX REPLACE "^(.*/)?([^/]+)$" "\\2" ${var} ${file})
ENDMACRO(FILE_NAME)

MACRO(BASE_NAME var file)
  SET(${var} "")
  STRING(REGEX REPLACE "^(.*/)?([^/]+)$" "\\1" ${var} ${file})
ENDMACRO(BASE_NAME)

MACRO(OCAML_ADD_TARGET name)
  SET(OCAML_SOURCE_FILES_${name} ${ARGN})
ENDMACRO(OCAML_ADD_TARGET)

MACRO(OCAML_ADD_LIBRARY name)
  OCAML_ADD_TARGET(${ARGV})
  ADD_LIBRARY(${ARGV})
ENDMACRO(OCAML_ADD_LIBRARY)

MACRO(OCAML_ADD_EXECUTABLE name)
  OCAML_ADD_TARGET(${ARGV})
  ADD_EXECUTABLE(${ARGV})
ENDMACRO(OCAML_ADD_EXECUTABLE)

MACRO(OCAML_LINK_LIBRARIES name)
  FOREACH(LIB ${ARGN})
    GET_TARGET_PROPERTY(ARCHIVE ${LIB} LOCATION)
    IF(ARCHIVE-NOTFOUND)
      MESSAGE(FATAL_ERROR "Could not find archive for library: ${LIB}")
    ENDIF(ARCHIVE-NOTFOUND)
    FILE_NAME(LIB_FILE ${ARCHIVE})
    BASE_NAME(LIB_BASE ${ARCHIVE})
    #SET_SOURCE_FILES_PROPERTIES(
    #  ${OCAML_SOURCE_FILES_${name}} PROPERTIES
    #  COMPILE_FLAGS "-I ${LIB_BASE}/CMakeFiles/${LIB}.dir")
    GET_TARGET_PROPERTY(LIB_CFLAGS ${name} COMPILE_FLAGS) 
    GET_TARGET_PROPERTY(LIB_LFLAGS ${name} LINK_FLAGS)
    IF(NOT LIB_CFLAGS)
      SET(LIB_CFLAGS "")
    ENDIF(NOT LIB_CFLAGS)
    IF(NOT LIB_LFLAGS)
      SET(LIB_LFLAGS "")
    ENDIF(NOT LIB_LFLAGS)
    SET_TARGET_PROPERTIES(${name} PROPERTIES
      COMPILE_FLAGS "-I ${LIB_BASE}CMakeFiles/${LIB}.dir ${LIB_CFLAGS}"
      LINK_FLAGS "-I ${LIB_BASE} -I ${LIB_BASE}CMakeFiles/${LIB}.dir ${LIB_LFLAGS}")
  ENDFOREACH(LIB ${ARGN})
  TARGET_LINK_LIBRARIES(${ARGV})
ENDMACRO(OCAML_LINK_LIBRARIES)

MACRO(OCAML_MAKE_TOPLEVEL name)
  GET_TARGET_PROPERTY(LIB_LFLAGS ${name} LINK_FLAGS)
  IF(NOT LIB_LFLAGS)
    SET(LIB_LFLAGS "")
  ENDIF(NOT LIB_LFLAGS)
  GET_TARGET_PROPERTY(BIN ${name} LOCATION)
  BASE_NAME(BIN_BASE ${BIN})
  SET_TARGET_PROPERTIES(${name} PROPERTIES LINK_FLAGS
    "--mktop -I ${BIN_BASE}CMakeFiles/${name}.dir ${LIB_LFLAGS}")
ENDMACRO(OCAML_MAKE_TOPLEVEL)

MACRO(OCAML_ENABLE_THREADS name)
  GET_TARGET_PROPERTY(LIB_CFLAGS ${name} COMPILE_FLAGS)
  GET_TARGET_PROPERTY(LIB_LFLAGS ${name} LINK_FLAGS)
  IF(NOT LIB_CFLAGS)
    SET(LIB_CFLAGS "")
  ENDIF(NOT LIB_CFLAGS)
  IF(NOT LIB_LFLAGS)
    SET(LIB_LFLAGS "")
  ENDIF(NOT LIB_LFLAGS)
  SET_TARGET_PROPERTIES(${name} PROPERTIES
    COMPILE_FLAGS "-thread ${LIB_CFLAGS}"
    LINK_FLAGS "-thread ${LIB_LFLAGS}")
ENDMACRO(OCAML_ENABLE_THREADS)
